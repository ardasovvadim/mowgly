{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;AAoBA,IAAY,aAMX;AAND,WAAY,aAAa;IACvB,iDAAQ;IACR,iDAAI;IACJ,mDAAK;IACL,mDAAK;IACL,qFAAsB;AACxB,CAAC,EANW,aAAa,KAAb,aAAa,QAMxB;;;;;;;;;;;;;;;;;;ACtBkC;;;AAG5B,MAAM,cAAc;IAIzB,YAA+B,GAAe;QAAf,QAAG,GAAH,GAAG,CAAY;QAF3B,YAAO,GAAG,MAAM,CAAC;IAEc,CAAC;IAEnD,WAAW;QACT,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAM,IAAI,CAAC,OAAO,GAAG,IAAI,EAAE,EAAE,CAAC;aAC9C,IAAI,CACH,mDAAG,CAAC,OAAO,CAAC,EAAE;YACZ,IAAI,OAAO,CAAC,MAAM;gBAChB,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAgB,CAAC;YAC7D,OAAO,OAAwB,CAAC;QAClC,CAAC,CAAC,CACH,CAAC;IACN,CAAC;;4EAnBU,cAAc;+GAAd,cAAc,WAAd,cAAc","sources":["./src/app/models/news/news-vm.ts","./src/app/services/news-api.service.ts"],"sourcesContent":["import {IdName} from \"../timetable-records/timetable-record.view.model\";\n\nexport interface NewsVm {\n  id?: string;\n  title: string;\n  description: string;\n  author: string;\n  createdDate: string;\n  imageUrl: string;\n  authorAvatar: string;\n  categoryId?: string;\n  categoryName?: string;\n}\n\nexport interface NewsDetailsVm extends NewsVm {\n  authorId?: string;\n  tournamentId?: string;\n  blocks: NewsBlock[];\n}\n\nexport enum NewsBlockType {\n  None = 0,\n  Text,\n  Video,\n  Image,\n  TournamentResultsTable\n}\n\nexport interface NewsBlock {\n  order: number;\n  type: NewsBlockType;\n  data: string;\n}\n\nexport interface NewsImageBlock {\n  url: string;\n  caption: string;\n}\n\nexport interface TournamentEditModel {\n  id: string;\n  name: string;\n  actionDate: string;\n}\n\nexport interface TournamentResultsData extends TournamentEditModel {\n  results: TournamentResult[];\n}\n\nexport interface TournamentResult {\n  id: string;\n  student: IdName;\n  place: string;\n  score: string;\n  additionalInfo: string;\n  awards: string;\n}\n","import { Injectable } from '@angular/core';\nimport {ApiService} from './api.service';\nimport {Observable} from 'rxjs';\nimport {NewsBlock, NewsDetailsVm, NewsVm} from '../models/news/news-vm';\nimport {map} from 'rxjs/operators';\n\n@Injectable()\nexport class NewsApiService {\n\n  protected readonly baseUrl = 'news';\n\n  constructor(protected readonly api: ApiService) { }\n\n  getNewsList(): Observable<NewsVm[]> {\n    return this.api.get(this.baseUrl);\n  }\n\n  getNewsDetails(id: string): Observable<NewsDetailsVm> {\n    return this.api.get<any>(this.baseUrl + `/${id}`)\n      .pipe(\n        map(details => {\n          if (details.blocks)\n            details.blocks = JSON.parse(details.blocks) as NewsBlock[];\n          return details as NewsDetailsVm;\n        })\n      );\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}