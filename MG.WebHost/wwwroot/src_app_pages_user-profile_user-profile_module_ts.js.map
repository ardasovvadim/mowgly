{"version":3,"file":"src_app_pages_user-profile_user-profile_module_ts.js","mappings":"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","sources":["./src/admin/utils/forms.ts","./src/app/pages/user-profile/components/change-password/change-password.component.ts","./src/app/pages/user-profile/components/change-password/change-password.component.html","./src/app/pages/user-profile/components/edit-master-profile/edit-master-profile.component.ts","./src/app/pages/user-profile/components/edit-master-profile/edit-master-profile.component.html","./src/app/pages/user-profile/components/personal-data/personal-data.component.ts","./src/app/pages/user-profile/components/personal-data/personal-data.component.html","./src/app/pages/user-profile/pages/user-profile-page/user-profile-page.component.ts","./src/app/pages/user-profile/pages/user-profile-page/user-profile-page.component.html","./src/app/pages/user-profile/user-profile-routing.module.ts","./src/app/pages/user-profile/user-profile.module.ts"],"sourcesContent":["import {FormGroup} from '@angular/forms';\n\nexport function formHasError(submitted: boolean, form: FormGroup, name: string, error: string): boolean {\n    return submitted && form.controls[name].hasError(error)\n}\n","import {Component, OnInit} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators} from '@angular/forms';\nimport {UserService} from '../../../../services/user.service';\nimport {ChangePasswordRequest} from '../../../../models/user.model';\nimport {mgSuccessNotification} from '../../../../utils/ui-kit';\nimport {getErrorListHtml} from '../../../../utils/utils';\n\n@Component({\n    selector: 'mg-change-password',\n    templateUrl: './change-password.component.html',\n    styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n    passwordForm: FormGroup = this.fb.group({\n        currentPassword: ['', [Validators.required]],\n        newPassword: ['', [Validators.required]],\n        confirmPassword: ['', [Validators.required]]\n    });\n    passwordFormSubmitted: boolean = false;\n    errorHtml: string = null;\n\n    constructor(\n        private readonly fb: FormBuilder,\n        private readonly userService: UserService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.passwordForm.get('confirmPassword').addValidators((confirmationControl: AbstractControl): ValidationErrors | null => {\n            const confirmValue = confirmationControl.value;\n            const passwordValue = this.passwordForm.get('newPassword').value;\n            if (confirmValue === '') {\n                return null;\n            }\n            if (confirmValue !== passwordValue) {\n                return {mustMatch: true}\n            }\n            return null;\n        });\n    }\n\n    changePassword() {\n        this.passwordFormSubmitted = true;\n        this.errorHtml = null;\n\n        if (this.passwordForm.invalid)\n            return;\n\n        const request = {...this.passwordForm.value} as ChangePasswordRequest;\n        this.userService.changePassword(request)\n            .subscribe(response => {\n                if (response.isSuccess) {\n                    mgSuccessNotification('Пароль бы изменен');\n                } else {\n                    this.errorHtml = getErrorListHtml(response.errors);\n                }\n            });\n    }\n\n    hasError(form: FormGroup, submitted: boolean, control: string, error: string): boolean {\n        return form.controls[control].hasError(error) && submitted\n    }\n\n}\n","<form [formGroup]=\"passwordForm\" (ngSubmit)=\"changePassword()\">\n\n    <div>\n        <button class=\"uk-button uk-button-primary\" type=\"submit\">\n            <span class=\"uk-margin-small-right\" uk-icon=\"icon: download\"></span>Зберігти\n        </button>\n    </div>\n\n    <div class=\"uk-margin\">\n        <mg-list-errors [errorHtml]=\"errorHtml\"></mg-list-errors>\n    </div>\n\n    <div class=\"uk-margin\" style=\"max-width: 300px\">\n\n        <div class=\"uk-margin\">\n            <label class=\"uk-form-label\" for=\"currentPassword\">\n                Текущий пароль\n                <ng-container\n                        *ngIf=\"hasError(passwordForm, passwordFormSubmitted, 'currentPassword', 'required')\">\n                    - це поле обов'язкове\n                </ng-container>\n            </label>\n            <input type=\"password\" class=\"uk-input\" id=\"currentPassword\"\n                   placeholder=\"Введіть текущий пароль\" formControlName=\"currentPassword\">\n        </div>\n\n        <div class=\"uk-margin\">\n            <label class=\"uk-form-label\" for=\"newPassword\">\n                Новый пароль\n                <ng-container\n                        *ngIf=\"hasError(passwordForm, passwordFormSubmitted, 'newPassword', 'required');\">\n                    - це поле обов'язкове\n                </ng-container>\n            </label>\n            <input type=\"password\" class=\"uk-input\" id=\"newPassword\" placeholder=\"Введіть новый пароль\"\n                   formControlName=\"newPassword\">\n        </div>\n\n        <div class=\"uk-margin\">\n            <label class=\"uk-form-label\" for=\"confirmPassword\">\n                Підтвердіть пароль\n                <ng-container\n                        *ngIf=\"hasError(passwordForm, passwordFormSubmitted, 'confirmPassword', 'required'); else confirmPasswordMatch\">\n                    - це поле обов'язкове\n                </ng-container>\n                <ng-template #confirmPasswordMatch>\n                    <ng-container\n                            *ngIf=\"hasError(passwordForm, passwordFormSubmitted, 'confirmPassword', 'mustMatch')\">\n                        - пароль має збігатися\n                    </ng-container>\n                </ng-template>\n            </label>\n            <div class=\"uk-form-controls\">\n                <input type=\"password\" class=\"uk-input\" placeholder=\"Подтвердите новый пароль\"\n                       id=\"confirmPassword\" formControlName=\"confirmPassword\">\n            </div>\n        </div>\n\n    </div>\n\n</form>\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {MasterEditModel} from '../../../../../admin/models/master-edit-model';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ProfileMaps} from '../../../../../admin/models/profile.model';\nimport {DataType} from '../../../../models/data-type';\nimport {ImageCroppModalComponent} from '../../../../mg-shared/components/image-cropp-modal/image-cropp-modal.component';\nimport {ActivatedRoute} from '@angular/router';\nimport {ManageImageApiService} from '../../../../services/manage-image-api.service';\nimport {applyProfileMappingToData, applyProfileMappingToForm} from '../../../../../admin/utils/settings';\nimport {mgConfirm} from '../../../../utils/ui-kit';\nimport {isGuid, toNormalDate} from '../../../../utils/utils';\nimport {formHasError} from '../../../../../admin/utils/forms';\n\n@Component({\n  selector: 'mg-edit-master-profile',\n  templateUrl: './edit-master-profile.component.html',\n  styleUrls: ['./edit-master-profile.component.scss'],\n  providers: [\n    ManageImageApiService\n  ]\n})\nexport class EditMasterProfileComponent implements OnInit {\n\n  private submitted: boolean = false;\n\n  @Input() set master(value: MasterEditModel) {\n    this.buildForm(value ?? {} as MasterEditModel);\n  }\n\n  @Input() editMode: boolean = false;\n  @Input() errorHtml: string = null;\n\n  form: FormGroup;\n\n  tab: number = 0;\n  defaultAvatar: string = '/assets/img/masters/avatars/default.webp';\n  defaultProfileImage: string = '/assets/img/masters/avatars/default.webp';\n  imagesToDelete: string[] = [];\n\n  private profileMappings: ProfileMaps = {\n    'avatar': {key: 'UserAvatar', type: DataType.Image, defaultValue: this.defaultAvatar},\n    'profileImage': {key: 'MasterProfileImage', type: DataType.Image, defaultValue: this.defaultProfileImage},\n    'description': {key: 'MasterDescriptions', type: DataType.Html},\n    'instagram': {key: 'MasterInstagramLink', type: DataType.String},\n    'facebook': {key: 'MasterFacebookLink', type: DataType.String},\n    'images': {key: 'MasterWithImages', type: DataType.Array, defaultValue: []},\n    'achievements': {key: 'CardMasterAchievements', type: DataType.Html, defaultValue: ''},\n  }\n\n  @ViewChild('cropModal') cropModal: ImageCroppModalComponent;\n  @ViewChild('cropProfileImageModal') cropProfileImageModal: ImageCroppModalComponent;\n\n  @Output() save: EventEmitter<MasterEditModel> = new EventEmitter<MasterEditModel>();\n\n  constructor(\n      private fb: FormBuilder,\n      private readonly activeRoute: ActivatedRoute,\n      private readonly imageApi: ManageImageApiService\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  submit(): MasterEditModel {\n    this.submitted = true;\n\n    if (!this.form.valid)\n      return null;\n\n    const request = this.form.value;\n    applyProfileMappingToData(this.profileMappings, request);\n\n    // todo\n    if (this.imagesToDelete.length > 0)\n      this.imageApi.deleteImages(this.imagesToDelete).subscribe();\n\n    return request;\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n  cropImage($event: Event) {\n    const file = ($event.target as HTMLInputElement).files[0];\n    const fr = new FileReader()\n    fr.onload = () => {\n      this.cropModal.imageUrl = fr.result as string;\n      this.cropModal.open();\n    }\n    fr.readAsDataURL(file);\n  }\n\n  displayImage(imageDataUrl: string) {\n    this.cropModal.close()\n    this.imageApi.add({\n      dataUrl: imageDataUrl,\n      pathPrefix: 'masters/avatars'\n    })\n        .subscribe(id => {\n          this.form.get('avatar')?.setValue(id);\n        });\n  }\n\n  private buildForm(data: MasterEditModel) {\n    this.submitted = false;\n\n    applyProfileMappingToForm(this.profileMappings, data);\n\n    if (data.birthday)\n      data.birthday = toNormalDate(data.birthday);\n\n    this.form = this.fb.group({\n      id: [''],\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      middleName: [''],\n      birthday: [''],\n      email: ['', [Validators.required, Validators.email]],\n      phone: [''],\n      profiles: [''],\n      avatar: [''],\n      profileImage: [''],\n      description: [''],\n      instagram: [''],\n      facebook: [''],\n      images: [''],\n      achievements: [''],\n    });\n\n    this.form.reset(data);\n  }\n\n  changeProfilePicture(imageDataUrl: string) {\n    this.cropProfileImageModal.close();\n    this.imageApi.add({\n      dataUrl: imageDataUrl,\n      pathPrefix: 'masters/profile-photos'\n    })\n        .subscribe(id => {\n          this.form.get('profileImage')?.setValue(id);\n        });\n  }\n\n  cropProfileImage($event: Event) {\n    const file = ($event.target as HTMLInputElement).files[0];\n    const fr = new FileReader()\n    fr.onload = () => {\n      this.cropProfileImageModal.imageUrl = fr.result as string;\n      this.cropProfileImageModal.open();\n    }\n    fr.readAsDataURL(file);\n  }\n\n  deleteImage(imageUrl: string) {\n    mgConfirm('Ви впевнені, що бажаєте видалити фото?')\n        .subscribe(() => {\n          if (isGuid(imageUrl)) {\n            this.imagesToDelete.push(imageUrl);\n          }\n\n          const control = this.form.get('images');\n          const array = control.value as any[];\n          control.setValue(array.filter(v => v != imageUrl));\n        })\n  }\n\n  hasError(control: string, error: string) {\n    return formHasError(this.submitted, this.form, control, error);\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n\n    <ng-content>\n    </ng-content>\n\n    <ul id=\"switcher\" uk-tab=\"animation: uk-animation-fade\">\n        <li><a href=\"#\" (click)=\"tab = 0\">Основна інформація</a></li>\n        <li><a href=\"#\" (click)=\"tab = 1\">Подробиці</a></li>\n    </ul>\n\n    <mg-list-errors [errorHtml]=\"errorHtml\"></mg-list-errors>\n\n    <ul class=\"uk-switcher uk-margin-medium\">\n\n        <!----------------------     FIRST TAB     ---------------------->\n\n        <li>\n            <ng-container *ngIf=\"tab == 0\">\n                <div class=\"uk-grid-small\" uk-grid>\n\n                    <!--     1 COLUMN     -->\n                    <div uk-form-custom>\n                        <img class=\"uk-border-circle uk-background-primary\"\n                             [src]=\"form.value.avatar | image\"\n                             (error)=\"form.value['avatar'] = defaultAvatar\"\n                             width=\"200\"\n                             height=\"200\"\n                             loading=\"lazy\"\n                             style=\"padding: 10px\"\n                             alt=\"Master card image avatar\">\n                        <div class=\"uk-margin uk-text-center\">\n                            <a>Змінити фото</a>\n                            <input type=\"file\" id=\"cardImage\" accept=\"image/*\" (change)=\"cropImage($event)\">\n                        </div>\n                    </div>\n\n                    <!--     2 COLUMN     -->\n                    <div>\n                        <!--     First name     -->\n\n                        <div class=\"uk-margin\">\n                            <label class=\"uk-form-label\" for=\"firstName\">\n                                Імʼя <sup>*</sup>\n                                <ng-template [ngIf]=\"hasError('firstName', 'required')\">\n                                    - це поле обов'язкове\n                                </ng-template>\n                            </label>\n                            <div class=\"uk-form-controls\">\n                                <input type=\"text\" class=\"uk-input\" placeholder=\"Імʼя\" formControlName=\"firstName\" id=\"firstName\">\n                            </div>\n                        </div>\n\n                        <!--     Last name     -->\n\n                        <div class=\"uk-margin\">\n                            <label class=\"uk-form-label\" for=\"lastName\">\n                                Прізвище <sup>*</sup>\n                                <ng-template [ngIf]=\"hasError('lastName', 'required')\">\n                                    - це поле обов'язкове\n                                </ng-template>\n                            </label>\n                            <div class=\"uk-form-controls\">\n                                <input type=\"text\" class=\"uk-input\" placeholder=\"Прізвище\" formControlName=\"lastName\"\n                                       id=\"lastName\">\n                            </div>\n                        </div>\n\n                        <!--     Middle name     -->\n\n                        <div class=\"uk-margin\">\n                            <label class=\"uk-form-label\" for=\"middleName\">По-батькові</label>\n                            <div class=\"uk-form-controls\">\n                                <input type=\"text\" class=\"uk-input\" placeholder=\"По-батькові\" formControlName=\"middleName\"\n                                       id=\"middleName\">\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <!--     3 COLUMN     -->\n                    <div>\n                        <!--     Birthday name     -->\n\n                        <div class=\"uk-margin\">\n                            <label class=\"uk-form-label\" for=\"birthday\">Дата народження</label>\n                            <div class=\"uk-form-controls\">\n                                <div class=\"uk-inline w-100\">\n                                <span class=\"uk-form-icon uk-form-icon-flip mg-text-green-main\"\n                                      uk-icon=\"icon: calendar\"></span>\n                                    <input type=\"date\" class=\"uk-input\" placeholder=\"Дата народження\"\n                                           formControlName=\"birthday\"\n                                           id=\"birthday\">\n                                </div>\n                            </div>\n                        </div>\n\n                        <!--     Email     -->\n\n                        <div class=\"uk-margin\">\n                            <label class=\"uk-form-label\" for=\"email\">\n                                Емейл <sup>*</sup>\n                                <ng-container *ngIf=\"hasError('email', 'required'); else emailEmail\">\n                                    - це поле обов'язкове\n                                </ng-container>\n                                <ng-template #emailEmail>\n                                    <ng-container *ngIf=\"hasError('email', 'email')\">\n                                        - некоректний формат емейлу\n                                    </ng-container>\n                                </ng-template>\n                            </label>\n                            <div class=\"uk-form-controls\">\n                                <input type=\"email\" class=\"uk-input\" placeholder=\"Емейл\" formControlName=\"email\"\n                                       id=\"email\">\n                            </div>\n                        </div>\n\n                        <!--     Phone     -->\n\n                        <div class=\"uk-margin\">\n                            <label class=\"uk-form-label\" for=\"phone\">Мобільний телефон</label>\n                            <div class=\"uk-form-controls\">\n                                <input type=\"tel\" class=\"uk-input\" placeholder=\"Мобільний телефон\"\n                                       formControlName=\"phone\"\n                                       id=\"phone\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <div>\n                        <div class=\"uk-margin\">\n                            <label class=\"uk-form-label\" for=\"instagramUrl\">Instagram</label>\n                            <div class=\"uk-inline w-100\">\n                                <a class=\"uk-form-icon\" href=\"#\" uk-icon=\"icon: instagram\"></a>\n                                <input type=\"text\" class=\"uk-input\" placeholder=\"Введіть ссылку на профиль в instagram\" formControlName=\"instagram\" id=\"instagramUrl\">\n                            </div>\n                        </div>\n                        <div class=\"uk-margin\">\n                            <label class=\"uk-form-label\" for=\"facebook\">Facebook</label>\n                            <div class=\"uk-inline w-100\">\n                                <span class=\"uk-form-icon\" uk-icon=\"icon: facebook\"></span>\n                                <input type=\"text\" class=\"uk-input\" placeholder=\"Введіть ссылку на профиль в facebook\" formControlName=\"facebook\" id=\"facebook\">\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n                <mg-image-cropp-modal #cropModal\n                                      [circleCropper]=\"true\"\n                                      [aspectRatio]=\"1\"\n                                      [saveOptions]=\"{width: 200, height: 200}\"\n                                      (onSave)=\"displayImage($event)\"></mg-image-cropp-modal>\n            </ng-container>\n        </li>\n\n        <!----------------------     SECOND TAB     ---------------------->\n        <li>\n            <ng-container *ngIf=\"tab == 1\">\n\n                <div class=\"uk-grid uk-grid-row-large uk-child-width-1-2@m uk-grid-divider\" uk-grid>\n\n                    <!--     PROFILE IMAGE COLUMN     -->\n                    <div class=\"x-center\">\n                        <div class=\"uk-inline\" uk-form-custom>\n                            <h3>Фото інструктора</h3>\n                            <img loading=\"lazy\"\n                                 class=\"mg-background-green-main\"\n                                 [src]=\"form.value['profileImage'] | image\"\n                                 width=\"400\"\n                                 height=\"500\"\n                                 style=\"padding: 10px\"\n                                 alt=\"Изображение профиля Інструктора\">\n                            <div class=\"uk-margin uk-text-center\">\n                                <a>Изменить фото</a>\n                                <input type=\"file\" id=\"profileImage\" accept=\"image/*\" (change)=\"cropProfileImage($event)\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <!--     DESCRIPTION COLUMN     -->\n                    <div>\n                        <h3>Опис</h3>\n                        <mg-quill-editor placeholder=\"Введіть текст...\"\n                                         [height]=\"400\"\n                                         formControlName=\"description\"></mg-quill-editor>\n                    </div>\n\n                    <!--     CARD DESCRIPTION COLUMN     -->\n                    <div class=\"mg-quill-field\">\n                        <h3>Опис карточки</h3>\n                        <mg-quill-editor placeholder=\"Введіть опис...\"\n                                         [height]=\"150\"\n                                         formControlName=\"achievements\">\n                            <div class=\"mg-editor\" style=\"display: none\"></div>\n                        </mg-quill-editor>\n                    </div>\n\n                    <!--     PHOTOS COLUMN     -->\n                    <div class=\"w-100\">\n                        <h3>Фото с інструктором</h3>\n                        <button type=\"button\" class=\"uk-button uk-button-primary uk-margin-medium-bottom\" (click)=\"addImageModal.open()\">Додати</button>\n                        <div uk-grid=\"masonry: true\" class=\"uk-grid uk-child-width-auto@s\">\n                            <div *ngFor=\"let image of form.value['images']\" class=\"on-hover\">\n                                <img class=\"mg-background-green-main\"\n                                     style=\"padding: 5px;\"\n                                     [src]=\"image | image\"\n                                     height=\"300\"\n                                     width=\"400\">\n                                <div class=\"mg-btn-delete uk-position-absolute uk-padding-small uk-position-top-right\">\n                                    <a uk-icon=\"icon: close\" (click)=\"deleteImage(image)\"></a>\n                                </div>\n                            </div>\n                        </div>\n\n                        <mg-add-image-modal #addImageModal\n                                            [aspectRatio]=\"4/3\"\n                                            [saveOptions]=\"{width: 800, height: 600}\"\n                                            pathPrefix=\"photo-with-masters\"\n                                            (onImageAdded)=\"addImageModal.close(); form.get('images')?.value?.push($event)\"></mg-add-image-modal>\n                    </div>\n\n\n                </div>\n\n                <mg-image-cropp-modal #cropProfileImageModal\n                                      [circleCropper]=\"false\"\n                                      [aspectRatio]=\"4/5\"\n                                      [saveOptions]=\"{width: 400, height: 500}\"\n                                      (onSave)=\"changeProfilePicture($event)\"></mg-image-cropp-modal>\n\n            </ng-container>\n        </li>\n    </ul>\n\n\n</form>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ProfileMaps} from '../../../../../admin/models/profile.model';\nimport {DataType} from '../../../../models/data-type';\nimport {applyProfileMappingToData, applyProfileMappingToForm} from '../../../../../admin/utils/settings';\nimport {mgSuccessNotification} from '../../../../utils/ui-kit';\nimport {getErrorListHtml, readImageAsDataUrl, toNormalDate} from '../../../../utils/utils';\nimport {UserService} from '../../../../services/user.service';\nimport {ManageImageApiService} from '../../../../services/manage-image-api.service';\nimport {ImageCroppModalComponent} from '../../../../mg-shared/components/image-cropp-modal/image-cropp-modal.component';\nimport {map} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport {EditMasterProfileComponent} from '../edit-master-profile/edit-master-profile.component';\n\n@Component({\n    selector: 'mg-personal-data',\n    templateUrl: './personal-data.component.html',\n    styleUrls: ['./personal-data.component.scss'],\n    providers: [\n        ManageImageApiService\n    ]\n})\nexport class PersonalDataComponent implements OnInit {\n\n    @ViewChild('masterProfileComponent') masterProfileComponent: EditMasterProfileComponent;\n\n    form: FormGroup = this.fb.group({\n        firstName: [''],\n        lastName: [''],\n        middleName: [''],\n        birthday: [''],\n        email: ['', [Validators.required]],\n        phoneNumber: [''],\n        profiles: [[]],\n        avatar: ['']\n    });\n    profileFormSubmitted: boolean = true;\n    imgAvatarErr: boolean;\n    private profileMappings: ProfileMaps = {\n        'avatar': {key: 'UserAvatar', type: DataType.Image}\n    }\n    errorHtml: string = null;\n\n    @ViewChild('cropImageModal') cropImageModal: ImageCroppModalComponent;\n    isMaster$: Observable<boolean> = this.userService.profile$.pipe(\n        map(profile => profile?.roles?.some(r => r === 'Master') ?? false)\n    );\n\n    profile = null;\n\n    constructor(\n        private readonly userService: UserService,\n        private readonly fb: FormBuilder,\n        private readonly imageService: ManageImageApiService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.refreshProfile();\n    }\n\n    submit() {\n        this.errorHtml = null;\n        this.profileFormSubmitted = true;\n\n        if (this.form.invalid)\n            return;\n\n        const request = this.form.value;\n        applyProfileMappingToData(this.profileMappings, request);\n    }\n\n    private updateUserData(request) {\n        this.userService.updateUserData(request)\n            .subscribe(response => {\n                if (response.isSuccess) {\n                    mgSuccessNotification('Профіль було збережено');\n                    this.userService.refreshProfile();\n                    this.errorHtml = null;\n                } else {\n                    this.errorHtml = getErrorListHtml(response.errors)\n                }\n            });\n    }\n\n    cropImage($event: Event) {\n        readImageAsDataUrl($event, dataUrl => {\n            this.cropImageModal.imageUrl = dataUrl;\n            this.cropImageModal.open();\n        });\n    }\n\n    onImageCropped(imageUrl: string) {\n        this.imageService.add({\n            dataUrl: imageUrl,\n            pathPrefix: 'avatar'\n        }).subscribe(id => {\n            this.form.controls['avatar']?.setValue(id);\n            this.cropImageModal.close();\n        });\n    }\n\n    private refreshProfile() {\n        this.userService.getEditProfile()\n            .subscribe(profile => {\n                this.profile = profile;\n                applyProfileMappingToForm(this.profileMappings, profile);\n                if (profile.birthday)\n                    profile.birthday = toNormalDate(profile.birthday)\n                this.form.reset(profile);\n            });\n    }\n\n    saveMasterProfile() {\n        const request = this.masterProfileComponent.submit();\n\n        if (!request)\n            return;\n\n        this.updateUserData(request);\n    }\n}\n","<ng-template [ngIf]=\"isMaster$ | async\" [ngIfElse]=\"userProfile\">\n    <mg-edit-master-profile [master]=\"profile\" [editMode]=\"true\" [errorHtml]=\"errorHtml\" #masterProfileComponent>\n        <div class=\"uk-margin\">\n            <button class=\"uk-button uk-button-primary\" type=\"submit\" (click)=\"saveMasterProfile()\">\n                <span class=\"uk-margin-small-right\" uk-icon=\"icon: download\"></span>Зберігти\n            </button>\n        </div>\n    </mg-edit-master-profile>\n</ng-template>\n\n<ng-template #userProfile>\n    <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n\n        <div>\n            <button class=\"uk-button uk-button-primary\" type=\"submit\">\n                <span class=\"uk-margin-small-right\" uk-icon=\"icon: download\"></span>Зберігти\n            </button>\n        </div>\n\n        <div class=\"uk-margin\">\n            <mg-list-errors [errorHtml]=\"errorHtml\"></mg-list-errors>\n        </div>\n\n        <div class=\"uk-modal-body\">\n            <div class=\"uk-grid-small\" uk-grid>\n\n                <!--     1 COLUMN     -->\n                <div uk-form-custom>\n\n                    <div class=\"uk-border-circle mg-background-green-main uk-overflow-hidden\"\n                         *ngIf=\"!form.value.avatar || imgAvatarErr; else imgAvatar\"\n                         style=\"padding: 10px;width: 200px; height: 200px;\">\n                        <div class=\"uk-border-circle uk-overflow-hidden mg-text-green\">\n                            <a uk-icon=\"icon: avatar;\"></a>\n                        </div>\n                    </div>\n\n                    <ng-template #imgAvatar>\n                        <img class=\"uk-border-circle uk-background-primary\"\n                             [src]=\"form.value.avatar | image\"\n                             (loadeddata)=\"imgAvatarErr = false;\"\n                             (error)=\"imgAvatarErr = true;\"\n                             width=\"200\"\n                             height=\"200\"\n                             loading=\"lazy\"\n                             style=\"padding: 10px\"\n                             alt=\"Master card image avatar\">\n                    </ng-template>\n\n                    <div class=\"uk-margin uk-text-center\">\n                        <a>Змінити фото</a>\n                        <input type=\"file\" id=\"cardImage\" accept=\"image/*\" (change)=\"cropImage($event)\">\n                    </div>\n                </div>\n\n                <!--     2 COLUMN     -->\n                <div>\n                    <!--     First name     -->\n\n                    <div class=\"uk-margin\">\n                        <label class=\"uk-form-label\" for=\"firstName\">Імʼя:</label>\n                        <div class=\"uk-form-controls\">\n                            <input type=\"text\" class=\"uk-input\" placeholder=\"Імʼя\" formControlName=\"firstName\"\n                                   id=\"firstName\">\n                        </div>\n                    </div>\n\n                    <!--     Last name     -->\n\n                    <div class=\"uk-margin\">\n                        <label class=\"uk-form-label\" for=\"lastName\">Прізвище:</label>\n                        <div class=\"uk-form-controls\">\n                            <input type=\"text\" class=\"uk-input\" placeholder=\"Прізвище\" formControlName=\"lastName\"\n                                   id=\"lastName\">\n                        </div>\n                    </div>\n\n                    <!--     Middle name     -->\n\n                    <div class=\"uk-margin\">\n                        <label class=\"uk-form-label\" for=\"middleName\">По-батькові:</label>\n                        <div class=\"uk-form-controls\">\n                            <input type=\"text\" class=\"uk-input\" placeholder=\"По-батькові\"\n                                   formControlName=\"middleName\"\n                                   id=\"middleName\">\n                        </div>\n                    </div>\n\n                </div>\n\n                <!--     3 COLUMN     -->\n                <div>\n                    <!--     Birthday name     -->\n\n                    <div class=\"uk-margin\">\n                        <label class=\"uk-form-label\" for=\"birthday\">Дата народження:</label>\n                        <div class=\"uk-form-controls\">\n                            <div class=\"uk-inline w-100\">\n                              <span class=\"uk-form-icon uk-form-icon-flip mg-text-green-main\"\n                                    uk-icon=\"icon: calendar\"></span>\n                                <input type=\"date\" class=\"uk-input\" placeholder=\"Дата народження\"\n                                       formControlName=\"birthday\"\n                                       id=\"birthday\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <!--     Email     -->\n\n                    <div class=\"uk-margin\">\n                        <label class=\"uk-form-label\" for=\"email\">Емейл:</label>\n                        <div class=\"uk-form-controls\">\n                            <input type=\"email\" class=\"uk-input\" placeholder=\"Емейл\" formControlName=\"email\"\n                                   id=\"email\">\n                        </div>\n                    </div>\n\n                    <!--     Phone Number     -->\n\n                    <div class=\"uk-margin\">\n                        <label class=\"uk-form-label\" for=\"phoneNumber\">Мобільний телефон:</label>\n                        <div class=\"uk-form-controls\">\n                            <input type=\"tel\" class=\"uk-input\" placeholder=\"Мобільний телефон\"\n                                   formControlName=\"phoneNumber\"\n                                   id=\"phoneNumber\">\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n            <mg-image-cropp-modal #cropImageModal\n                                  [circleCropper]=\"true\"\n                                  [saveOptions]=\"{width: 200, height: 200}\"\n                                  (onSave)=\"onImageCropped($event)\"\n                                  [aspectRatio]=\"1\"></mg-image-cropp-modal>\n        </div>\n\n    </form>\n</ng-template>\n","import {AfterContentInit, Component, OnDestroy} from '@angular/core';\nimport {ComponentState, MgComponentService} from '../../../../services/mg-component.service';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n    selector: 'mg-user-profile-page',\n    templateUrl: './user-profile-page.component.html',\n    styleUrls: ['./user-profile-page.component.scss'],\n    providers: []\n})\nexport class UserProfilePageComponent implements AfterContentInit, OnDestroy {\n\n    currentTab: number = 0;\n\n    constructor(\n        private readonly componentService: MgComponentService,\n        private readonly activatedRoute: ActivatedRoute\n    ) {\n        this.componentService.changeState({isFooterBar: false} as ComponentState);\n    }\n\n    ngOnInit(): void {\n        this.activatedRoute.url.subscribe(() => {\n            const data: any = this.activatedRoute.snapshot.firstChild.data;\n            this.currentTab = data?.index ?? 0;\n        })\n    }\n\n    ngOnDestroy(): void {\n        this.componentService.changeState({isFooterBar: true} as ComponentState)\n    }\n\n    ngAfterContentInit(): void {\n    }\n}\n","<div uk-grid>\n\n    <div class=\"uk-column-span uk-width-1-5@m\"></div>\n\n    <div class=\"uk-width-4-5@m\">\n        <h3 *ngIf=\"currentTab == 0\">Профіль</h3>\n        <h3 *ngIf=\"currentTab == 1\">Змінити пароль</h3>\n    </div>\n\n    <div class=\"uk-width-1-5@m\">\n        <ul class=\"uk-tab-right\" uk-tab>\n            <li [class.uk-active]=\"currentTab == 0\" [routerLink]=\"'/user-profile'\"><a>Профіль</a></li>\n            <li [class.uk-active]=\"currentTab == 1\" [routerLink]=\"'/user-profile/change-password'\"><a>Змінити пароль</a></li>\n        </ul>\n    </div>\n\n    <div class=\"uk-width-4-5@m\">\n        <router-outlet></router-outlet>\n    </div>\n\n</div>\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {UserProfilePageComponent} from './pages/user-profile-page/user-profile-page.component';\nimport {PersonalDataComponent} from './components/personal-data/personal-data.component';\nimport {ChangePasswordComponent} from './components/change-password/change-password.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserProfilePageComponent,\n    children: [\n      {path: '', component: PersonalDataComponent, data: {index: 0}},\n      {path: 'change-password', component: ChangePasswordComponent, data: {index: 1}},\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserProfileRoutingModule { }\n","import {NgModule} from '@angular/core';\n\nimport {UserProfileRoutingModule} from './user-profile-routing.module';\nimport {UserProfilePageComponent} from './pages/user-profile-page/user-profile-page.component';\nimport {PersonalDataComponent} from './components/personal-data/personal-data.component';\nimport {ChangePasswordComponent} from './components/change-password/change-password.component';\nimport {MgSharedModule} from '../../mg-shared/mg-shared.module';\nimport {EditMasterProfileComponent} from './components/edit-master-profile/edit-master-profile.component';\n\n\n@NgModule({\n    declarations: [\n        UserProfilePageComponent,\n        PersonalDataComponent,\n        ChangePasswordComponent,\n        EditMasterProfileComponent\n    ],\n    imports: [\n        MgSharedModule,\n        UserProfileRoutingModule\n    ]\n})\nexport class UserProfileModule {\n}\n"],"names":["Validators","DataType","applyProfileMappingToData","applyProfileMappingToForm","mgSuccessNotification","getErrorListHtml","readImageAsDataUrl","toNormalDate","ManageImageApiService","map","i0","ctx_r4","ctx_r0","ctx_r13","ctx_r15","ctx_r16","_r7","PersonalDataComponent","constructor","userService","fb","imageService","group","firstName","lastName","middleName","birthday","email","required","phoneNumber","profiles","avatar","key","type","Image","profile$","pipe","profile","roles","_a","some","r","_b","ngOnInit","refreshProfile","submit","errorHtml","profileFormSubmitted","form","invalid","request","value","profileMappings","updateUserData","subscribe","response","isSuccess","errors","cropImage","$event","dataUrl","cropImageModal","imageUrl","open","onImageCropped","add","pathPrefix","id","controls","setValue","close","getEditProfile","reset","saveMasterProfile","masterProfileComponent","selectors","viewQuery","decls","vars","consts","template","_r1"],"sourceRoot":"webpack:///"}